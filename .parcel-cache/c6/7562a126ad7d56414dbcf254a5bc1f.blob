window.dom = {
    create(string){
        const container = document.createElement("template")
        //trim 去除两边空格
        container.innerHTML = string.trim()
        return container.content.firstChild
    },
    // 用与新增弟弟
    after(node, node2){
        //找到这个节点的爸爸,调用爸爸的insertBefore方法，然后将node2插入到下一个节点的前面
        node.parentNode.insertBefore(node2, node.nextSibling)
    },
    // 用与新增哥哥
    before(node, node2){
        node.parentNode.insertBefore(node2, node)
    },
    // 新增儿子
    append(parent, node){
        parent.appendChild(node)
    },
    // 新增爸爸
    wrap(node,parent){
        dom.before(node, parent)
        dom.append(parent, node)
    },
    // 删除节点
    remove(node){
        node.parentNode.removeChild(node)
        return node
    },
    // 删除后代
    empty(node){
        const array = []
        let x = node.firstChild
        while(x){
            array.push(dom.remove(node.firstChild))
            x = node.firstChild
        };
        return array
    },
    attr(node, name, value){
        if(arguments.length === 3){
            node.setAttribute(name, value)
        }else if(arguments.length === 2){
            return node.getAttribute(name)
        }
    }
};